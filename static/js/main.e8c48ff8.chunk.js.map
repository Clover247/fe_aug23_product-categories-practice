{"version":3,"sources":["api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","products","categoryId","map","product","category","categoriesFromServer","find","cat","user","usersFromServer","usr","App","useState","newCategory","setNewCategory","newUser","setNewUser","filteredByCategory","filter","getFilteredByCategory","filteredByUser","getFilteredByUser","receivedProducts","includes","className","href","onClick","cn","type","placeholder","value","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8c48ff8.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from 'react';\nimport cn from 'classnames';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst products = productsFromServer.map((product) => {\n  const category = categoriesFromServer.find(cat => cat.id\n    === product.categoryId); // find by product.categoryId\n  const user = usersFromServer.find(usr => usr.id === category.ownerId); // find by category.ownerId\n\n  return {\n    ...product,\n    category,\n    user,\n  };\n});\n\nconst getFilteredByCategory = (newCategory) => {\n  if (newCategory === '') {\n    return products;\n  }\n\n  return products.filter(product => product.category.title === newCategory);\n};\n\nconst getFilteredByUser = (newUser) => {\n  if (newUser === '') {\n    return products;\n  }\n\n  return [...products].filter(product => product.user.name === newUser);\n};\n\nexport const App = () => {\n  const [newCategory, setNewCategory] = useState('');\n  const [newUser, setNewUser] = useState('');\n\n  // console.log(newUser, newCategory);\n\n  // console.log(getFilteredByCategory('Grocery'));\n  // console.log(getFilteredByUser('Anna'));\n  const filteredByCategory = getFilteredByCategory(newCategory);\n  const filteredByUser = getFilteredByUser(newUser);\n\n  // const getFilteredProducts = (categoryType, userName) => {\n  //   let array = [...products];\n\n  //   if (!categoryType) {\n  //     array = getFilteredByCategory(categoryType);\n  //   }\n\n  //   if (!userName) {\n  //     array = getFilteredByUser(userName);\n  //   }\n\n  //   return array;\n  // };\n\n  // const receivedProducts = getFilteredByUser(newUser);\n  const receivedProducts = filteredByCategory\n    .filter(product => filteredByUser.includes(product));\n\n  // console.log(receivedProducts);\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                onClick={() => setNewUser('')}\n                className={cn({\n                  'is-active': newUser === '',\n                })}\n              >\n                All\n              </a>\n\n              {usersFromServer.map(user => (\n                <a\n                  data-cy=\"FilterUser\"\n                  href=\"#/\"\n                  key={user.id}\n                  className={cn({\n                    'is-active': user.name === newUser,\n                  })}\n                  onClick={() => setNewUser(user.name)}\n                >\n                  {user.name}\n                </a>\n              ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value=\"qwe\"\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                <span className=\"icon is-right\">\n                  {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                  <button\n                    data-cy=\"ClearButton\"\n                    type=\"button\"\n                    className=\"delete\"\n                  />\n                </span>\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className={cn('button mr-6 is-outlined is-success', {\n                  'is-active': newCategory === '',\n                })}\n                onClick={() => setNewCategory('')}\n              >\n                All\n              </a>\n\n              {categoriesFromServer.map(category => (\n                <a\n                  href=\"#/\"\n                  data-cy=\"Category\"\n                  key={category.id}\n                  className={cn('button mr-2 my-1',\n                    { 'is-info': category.title === newCategory })}\n                  onClick={() => setNewCategory(category.title)}\n                >\n                  {category.title}\n                </a>\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={() => {\n                  setNewCategory('');\n                  setNewUser('');\n                }}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {receivedProducts.length === 0 && (\n            <p data-cy=\"NoMatchingMessage\">\n              No products matching selected criteria\n            </p>\n          )}\n\n          {receivedProducts.length !== 0 && (\n            <table\n              data-cy=\"ProductTable\"\n              className=\"table is-striped is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      ID\n\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Product\n\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort-down\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Category\n\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort-up\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      User\n\n                      <a href=\"#/\">\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {receivedProducts.map(product => (\n                  <tr data-cy=\"Product\">\n                    <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                      {product.id}\n                    </td>\n\n                    <td data-cy=\"ProductName\">{product.name}</td>\n                    <td data-cy=\"ProductCategory\">{`${product.category.icon} - ${product.category.title}`}</td>\n\n                    <td\n                      data-cy=\"ProductUser\"\n                      className={product.user.sex === 'f'\n                        ? 'has-text-danger'\n                        : 'has-text-link'\n                      }\n                    >\n                      {product.user.name}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}